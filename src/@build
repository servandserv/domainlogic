#!/bin/sh
set -e

usage() { printf "
Usage: @build name source destination

  params:
    name - project name 
    source - path to documentation source
    destination - path to docs files destination

  example:

    ./@build domainlogic ../source ../docs

" 1>&2; exit 1; }

if [ -z "$1" ]; then
    usage
fi
if [ -z "$2" ]; then
    usage
fi
if [ -z "$3" ]; then
    usage
fi

invokePath=$(pwd)
dlPath=$(dirname $(realpath $0))
#projectPath=$(dirname $(dirname $(realpath $0)))
#tmpBuildDir=${projectPath}"/tmp"
sourcePath=$(realpath "${invokePath}/${2}")
docsPath=$(realpath "${invokePath}/${3}")
tmpBuildPath="${dlPath}/tmp"

domain2Docs="${dlPath}/resources/stylesheets/docs/domain2docs.xsl";
ucpackage2Docs="${dlPath}/resources/stylesheets/docs/ucpackage2docs.xsl";
domain2Dot="${dlPath}/resources/stylesheets/docs/domain2dot.xsl";
ucpackage2Dot="${dlPath}/resources/stylesheets/docs/ucpackage2dot.xsl";

mkdir -p $docsPath
mkdir -p $tmpBuildPath

#  подчищаем
trap 'rm -rf -- ${tmpBuildPath}' EXIT

cd "${sourcePath}/domain"
# все глоссарии проекта
echo "..... build domain"
echo "<?xml version='1.0' encoding='utf-8'?><d:domains ID='${1}' xlink:title='Модель предметной области' xmlns:d='urn:docs:domain' xmlns:xlink='http://www.w3.org/1999/xlink'>" > ${tmpBuildPath}/temp.xml
#find domain -type f | while read j; do
for j in *.xml; do
	echo "<d:domain xlink:type='locator' xlink:href='${j}' />" >> ${tmpBuildPath}/temp.xml
done
echo "</d:domains>" >> ${tmpBuildPath}/temp.xml

# собираем все термины предметных областей проекта
echo "..... build domain instance file"
xsltproc --stringparam NS "${1}" --stringparam BASE "${sourcePath}/domain" "${domain2Docs}" ${tmpBuildPath}/temp.xml > ${tmpBuildPath}/domain.xml
chmod 777 ${tmpBuildPath}/domain.xml

cd "${sourcePath}"
#  строим диаграммы доменной области
echo "..... prepare domain svg files"
find domain -type f | while read j; do
	pack="${j%.xml}"
	pack="${pack#domain/}"
	ns="${pack//[\/]/:}"
	#echo "${ns}"
	mkdir -p ${tmpBuildPath}/graphviz/$pack/
	#chmod 777 ${tmpBuildPath}/graphviz/$pack
	mkdir -p ${tmpBuildPath}/images/$pack/
	#chmod 777 ${tmpBuildPath}/images/$pack
	xsltproc --stringparam NS "$ns" ${domain2Dot} ${tmpBuildPath}/domain.xml > ${tmpBuildPath}/graphviz/$pack/domain.dot
	dot -Tsvg -o${tmpBuildPath}/images/$pack/domain.svg ${tmpBuildPath}/graphviz/$pack/domain.dot
	#chmod 777 ${tmpBuildPath}/images/$pack/domain.svg
	#sed 's/Times,serif/Tahoma,Verdana/g' $TMP/images/$pack/domain.svg > $TMP/images/$pack/domain_.svg
	#mv $TMP/images/$pack/domain_.svg $TMP/images/$pack/domain.svg
done

cd "${sourcePath}/ucpackage"
# все пакеты сценариев проекта
echo "..... build usecases"
echo "<?xml version='1.0' encoding='utf-8'?><ucpackage ID='${1}' xlink:title='Прецеденты использования' xmlns:d='urn:docs:domain' xmlns='urn:docs:ucpackage' xmlns:xlink='http://www.w3.org/1999/xlink'>" > ${tmpBuildPath}/temp.xml
#find ucpackage -type f | while read j; do
#find . -maxdepth 1 -type f | while read j; do
for j in *.xml; do
	echo "<ucpackage xlink:type='locator' xlink:href='${j}' />" >> ${tmpBuildPath}/temp.xml
done
echo "</ucpackage>" >> ${tmpBuildPath}/temp.xml

# собираем вcе прецеденты проекта
echo "..... build usecases instance file"
xsltproc --stringparam NS "${1}" --stringparam BASE "${sourcePath}/ucpackage" "$ucpackage2Docs" ${tmpBuildPath}/temp.xml > ${tmpBuildPath}/ucpackage.xml
chmod 777 ${tmpBuildPath}/ucpackage.xml

cd "${sourcePath}"
# строим все диаграммы прецедентов
echo "..... prepare usecase svg file"
find ucpackage -type f | while read j; do
	pack="${j%.xml}"
	pack="${pack#ucpackage/}"
	ns="${pack//[\/]/:}"
	#echo "${pack}"
	mkdir -p ${tmpBuildPath}/graphviz/$pack/
	#chmod 777 $TMP/graphviz/$pack
	mkdir -p ${tmpBuildPath}/images/$pack/
	#chmod 777 $TMP/images/$pack
	xsltproc --stringparam NS "$ns" --stringparam BASE "${dlPath}" ${ucpackage2Dot} ${tmpBuildPath}/ucpackage.xml > ${tmpBuildPath}/graphviz/$pack/ucpackage.dot
	dot -Tsvg -o${tmpBuildPath}/images/$pack/ucpackage.svg ${tmpBuildPath}/graphviz/$pack/ucpackage.dot
	#chmod 777 $TMP/images/$pack/ucpackage.svg
done

# собираем всю документацию проекта в TOC
echo "..... build table of contents"
xsltproc ${dlPath}/resources/stylesheets/docs/docs2toc.xsl ${tmpBuildPath}/temp.xml > ${tmpBuildPath}/TOC.xml

# делаем готовый файл документации для удобства просмотра
echo "..... prepare domain docs html"
xsltproc --novalid ${dlPath}/resources/web/stylesheets/domain.xsl ${tmpBuildPath}/domain.xml > ${docsPath}/domain.html
chmod 755 ${docsPath}/domain.html
echo "..... prepare usecases docs html"
xsltproc --novalid --stringparam BASE "${dlPath}" ${dlPath}/resources/web/stylesheets/ucpackage.xsl ${tmpBuildPath}/ucpackage.xml > ${docsPath}/ucpackage.html
chmod 755 ${docsPath}/ucpackage.html

exit;